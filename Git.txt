[Cheat Sheet](http://help.github.com/git-cheat-sheets/)

{GitRepositories}

[Branching Strategy Overview](http://nvie.com/posts/a-successful-git-branching-model/)  

Prepare folder:  
`git init`

Checkout:  
`git clone git@github.com:plafond/wiki.git`

Add:  
*all new files:* `git add .`  
*specific file:* `git add $file$`

Delete file:  
`git rm $file$`

Commit all changes:  
`git commit -a`  
`git commit -m "message"` -> add comment  
`git commit -v` -> show diff   
`git commit -a -v` -> can combine 

List files added:  
`git ls-files`   

Log/comments:  
`git log` -v and --stat are options  

Push changes to master(remote) repo:  
`git push origin`

Update local branch:  
`git pull`

Get repo without merging:  
`git fetch $repo_name$`

Get repo WITH merging:  
`git merge $repo_name$/$local_branch$`


Setup user on new machine:  
`git config --global user.name "plafond"`  
`git config --global user.email plafond@gmail.com`

Initial commit (after add/commit):  
`git remote add origin git@github.com:plafond/hashDictionary.git`

Initial push (after add/commit and remote add):  
`git push -u origin master`

Reset local repo to Head|<branch>  
`git reset --hard HEAD`


^^perhaps it is better to `git checkout <filename>`??  
`git checkout -f`

Can actually revert a commit!  
`git revert HEAD|<branch>`
